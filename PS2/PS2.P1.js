let F = [0, 1];

const fibs = function* () {
    /**
     * Generate a memoized array of fibonacci numbers.
     * No limit set on number of iterations.
     */
    yield F[0];
    yield F[1];
    for (let i = 2 ; ; i++) {
        F.push(F[i - 1] + F[i - 2]);
        yield F[i];
    }
};

const n_evenFibs = function* (n) {
    /**
     * Pulls from function fibs() to generate fibonacci
     * values. Only accepts even numbers.
     *
     * @param n specifies the limit on the number of
     *   even fibonacci numbers generated by the
     *   function (zero inclusive).
     */
    let count = 0;
    for (let fib of fibs())
        if (fib%2 === 0) {
            count++;
            if (count >= n) return fib;
            yield fib;
        }
};

evenFibs = n_evenFibs(6);  // test case from handout

let next;
do {
    next = evenFibs.next();
    console.log(next.value)
} while (!next.done);